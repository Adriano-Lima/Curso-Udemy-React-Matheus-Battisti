Meu repositório: https://github.com/Adriano-Lima/Curso-Udemy-React-Matheus-Battisti

Curso JavaScript
	https://youtu.be/OYPbr6ZG3pc

>> Seção 1: Introdução
	Matheus Battisti (Youtube)
		Repositorio do Curso:
			https://github.com/matheusbattisti/curso_react
		O repositório do projeto do TMDB (API de filmes) é este: 
			https://github.com/matheusbattisti/movies_lib/tree/main	

	é uma Biblioteca JavaScript
	Arquitetura baseada em componentes

	criando um projeto:
		npx create-react-app <nome>

		criando com o Vite:
			instala menos coisas que o padrao (projeto mais limpo)
			build mais rapido 
			npm create vite@latest


	rodar um projeto:
		npm start
		usando o Vite:
			npm run dev

	Estrutura base:
		node_modules
		public: html de inicializacao
		src: onde programamos os apps
		src/index.js: arquivo de inicializacao do React
		src/App.js: Componente principal da aplicacao

	Extensão para react:
		ES7+ React/Redux/React-Native
			rafce (criar componente)

>> Seção 2
	
	Criando um novo componente
		const NomeComoponente = () => {
			return (
				<div></div>
			);
		}
		export default NomeComoponente;
	
	
	Importação de componentes
		import X from './components/X'	
			se eu importar dessa forma eu importo o default
			mas se quiser impotar outra funcao por exemplo do arquivo
				import {NovoMenu} from './DivMenu'

	JSX
		tudo que fica dentro do return de um componente é um JSX 

	Comentários
		// algum Comentário ou /* */ no JS 
		{/* */} no JSX

		Ver dados no console do navegador (para debug por exemplo)
		console.log("")	
		alert(`nome:${nome}`)

>> Seção 3: Avançando no React	
	Imagens
		Se a imagem estiver na pasta public
			<img src="/img1.jpg" alt="Paisagem" />
		Se estiver na pasta assets
			import City from './assets/city.jpg'
			<img src={City} alt="Cidade" />

	Hooks
		recursos do React
		começam com use, ex: useState
		precisam ser importados

		import { useState } from "react";
		const [number,setNumber] = useState(5);
			useState sempre retorna uma array 
			quando uma variavel esta sendo controlada pelo useState muda seu valor, ele faz uma rendirizacao do componente que esta utilizando esta variavel 

		criando um hook (Hook personalizado)
			- é uma funcao criada em um arquivo reparado e que ira gerencia algum(s) estado(s)
				ex: crio um arquivo na pasta hooks chamado useRequest.js
				export const useRequest = () => {
					const [loading,setLoading] = useState(false)

					const getRequest = async (url) => {
						setLoadind(true)
						....
					}
					...
					return {loading,getRequest}
				}
			
			- onde vai usar o hook:
				const {loading,getRequest} = useRequest ()
					

	Lista 
		const [list] = useState(["Matheus","Pedro","Adriano"])
		<ul>
            {list.map((item,i)=> (
                <li key={i}>{item}</li>
            ))}
        </ul>	

	Condicional
		- exemplos em ConditionalRender	

	Props
		Permite passar valores de componente pai para um componente filho
		vem em um objeto no argumento da funcao do componente
		- exemplos em ShowUserName, CarDetails

		no componente pai 
			<DivMenu titulo="teste">Carro Novo</DivMenu>
		
		no componente filho
			const DivMenu = ({titulo, children}) => {
				return {
					<div>
						<h1>{titulo}</h1>
						<h2>{children}</h2>
					</div>
				}
			}


	Fragments
		<></>

	Children prop (abracar conteudo)
		utilizado para quando um componente precisa ter Jsx dentro de um componente
		porem este JSX vem do componente pai 

	Função props 
		as funções do pai podem ser passados via props para o componente filho 

	Elevação de state (State lift)
		quando um valor é elevado do componente filho para o pai 

>> Seção 4
	CSS global 
		utilizado para estilizar varios elementos
		utilizamos no arquivo index.css na pasta src 
	
	CSS de componente 
		cria-se um arquivo de css com o mesmo nome do componente 
		importado no componente
		tomar cuidado pois vaza para toda aplicação

	Inline style
		<p style={ {color:"bule",padding:"25px",borderTop:"2px solid red" } }>Este elemento foi estilzado de forma inline</p>

	Inline style Dinamico
		<h2 style={ n<10? ({color:"purple"}): ({color:"green"}) }>CSS Dinâmico</h2>

	Classe Dinamica
		<h2 className={redTitle ? "red-title":"title" }>Esse titulo vai ter uma classe dinamica</h2>

	CSS Modulos
		nao vaza 
		Componente.module.css 
		precisamos importar no compomente

>> Seção 5: Formulários com React

>> Seção 6: Projeto Word Secret

>> Seção 7: Requisições HTTP com React
	Json Server
		simula uma API
		npm i json-server (na pasta do projeto)
		add um pasta data na raiz do projeto e adicionar um arquivo chamado db.json 
			{
				"products": [
					{
					"id": 1,
					"name": "Camisa",
					"price": 59.9
					}
				]
			}
		Add em package.json (scripts)
			"server":"json-server --watch data/db.json"
		para executar:
			npm run server 	
	useEffect
		faz com que uma determinada açao seja executada apenas vez
		isso é interessante pois os componentes estão sempre se renderizando
		presente sempre nas requisições assincronas 

	Custom hook para o fetch
		dividir uma função para que ela possa ser reaproveitada
		hooks ficam na pasta hooks
		padrao useName 
		criamos uma função e exportamos ela 

	Estado de loading no Post
		remover ação de adicionar outro item enquanto o request ainda nao finalizou
	
	React Router	
		criar estruturas de rotas 
		precisa instalar (BrowserRouter, Routes, Route) e configurar no projeto 
			npm i react-router-dom

>> Seção 8: React Router 
	precisa instalar
		npm i react-router-dom
		import { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'
		<BrowserRouter>
        	<Navbar />
				<Routes>
					<Route path='/' element={<Home />} />
					<Route path='/about' element={<About />} />
					{/* no match route 404 */}
					<Route path="*" element={<NotFound />} />
				</Routes>
      	</BrowserRouter>

	Link Ativo 
		import {Link, NavLink } from 'react-router-dom'
		trocar Link por NavLink 	
		<Link to="/">Home</Link>	
			<NavLink to="/">Home</NavLink>	
	Mudar de rota no js 
		import { useNavigate } from "react-router-dom"	
		navigate("/home")			

>> Seção 9: Context API do React
	facilita o compartilhamento de um estado (variaves) entre componentes
	dados globais 
	o context precisa abracar os componentes que receberao seus valores
	geralmente colocamos no App.js ou index.js
	ficam na pasta context 	
	




>> Seção 10: Mini blog
	trabalhando/integrando projeto com Firebase Auth
	

			 
						












			





